오늘 하루 일정 

14:00 ~ 16:00 : 개인 설정 및 Unreal Engine 개임개발로 Dive 
1. Unreal Engine을 조사하세요! 

🚀 
🎮Unreal Engine이 무엇인지 간단히 설명하고, 게임 엔진으로서의 역할을 조사해요. 게임 엔진이란 무엇인가요? 

언리얼 엔진은 Epic Games에 개발한 3D 게임 엔진입니다. 1998년 1인칭 슈팅 게임 '언리얼' 에서 처음 손보였습니다.
언리얼 엔진(Unreal Engine)은 에픽게임즈(Epic Games)에서 개발한 3D 컴퓨터 그래픽스 게임 엔진입니다. 1998년 1인칭 슈팅 게임 "언리얼"에서 처음 선보였으며 현재는 최신 언리얼 엔진 5(UE5)까지 출시했습니다. 
*C++ 언어로 작성되었습니다. 
* 높은 휴대성을 특징으로 데스크톱, 모바일, 콘솔, 가상 현실 등 다양한 플랫폼을 지원합니다.
기술의 특화
비디오 게임의 핵심 기술로 설계되었지만, 현재는 영화 제작, 건축 시각화, 자동차 디자인, 시뮬레이션, 훈련 등 다양한 산업에서 실시간 3D 시각화 및 가상 생산에 활용되고 있습니다. 

🚀 
✨Unreal Engine의 주요 기능(그래픽 렌더링, 물리 엔진, 비주얼 스크립팅 등)을 간략하게 설명해주세요. 내가 하는 게임으로 예시를 들어주신다면 베스트 입니다! 

게임 엔진은 비디오 게임 개발을 위한 소프트웨어 개발 환경 또는 프레임워크입니다. 게임을 처음부터 모든 요소를 코딩하는 대신, 개발자들이 게임을 효율적으로 만들 수 있도록 미리 만들어진 도구와 기능을 제공합니다.
게임 엔진의 주요 역할과 구성 요소
•	그래픽 렌더링 엔진 (Rendering Engine): 2D 또는 3D 그래픽을 화면에 표시하는 역할을 합니다. 오브젝트, 텍스처, 효과 등을 시각적으로 처리하며, 최신 게임 엔진은 레이 트레이싱(Ray Tracing) 및 사실적인 조명 시스템과 같은 강력한 그래픽 기술을 지원합니다.
•	물리 엔진 (Physics Engine): 게임 내에서 현실적인 물리 법칙(중력, 충돌, 탄성 등)을 시뮬레이션하여 오브젝트 간의 상호작용을 구현합니다.
•	사운드 엔진 (Audio Engine): 게임 내 음향 효과와 음악을 통합하고 제어합니다. 몰입감 있는 게임 경험을 위해 다중 채널 사운드 등을 지원합니다.
•	애니메이션 시스템 (Animation System): 캐릭터와 오브젝트의 움직임을 생성하고 제어하는 데 필요한 도구를 제공합니다.
•	인공지능 (AI): 게임 내 캐릭터의 행동과 상호작용을 제어하는 인공지능을 구현하는 데 사용됩니다.
•	스크립팅 및 프로그래밍 (Scripting/Programming): 게임 로직과 동작을 정의하는 데 사용되는 프로그래밍 언어(예: C++) 또는 시각적 스크립팅 시스템(예: 언리얼 엔진의 블루프린트)을 제공합니다.
•	레벨 편집기 (Level Editor): 게임 월드를 구성하고 오브젝트를 배치하며 환경을 디자인하는 데 사용되는 시각적 도구입니다.
•	네트워킹 기능 (Networking Functionality): 멀티플레이어 게임을 위한 네트워크 연결 및 데이터 동기화를 처리합니다.

🚀 
👍👎Unreal의 장점과 단점은 무엇인가요?
장점:
👍최고 수준의 그래픽 품질: Nanite, Lumen 등 최신 기술을 통해 매우 사실적이고 시각적으로 뛰어난 게임을 제작할 수 있습니다.
👍강력한 기능 세트: 그래픽, 물리, 애니메이션, AI, 네트워킹 등 게임 개발에 필요한 거의 모든 기능을 통합적으로 제공합니다.
👍블루프린트 비주얼 스크립팅: 코딩 없이 게임 로직을 구현할 수 있어 비프로그래머도 개발에 참여하기 용이하며, 빠른 프로토타이핑이 가능합니다.
👍오픈 소스 접근성 (일부): 엔진의 소스 코드에 접근할 수 있어 고도로 커스터마이징하거나 특정 문제를 해결하는 데 유용합니다.
단점:
👎높은 학습 곡선: 강력한 기능만큼 복잡하고 방대하여 초보자나 소규모 팀에게는 배우기 어려움
👎높은 리소스 요구량: 언리얼 엔진으로 개발된 게임은 높은 사양의 하드웨어를 요구하며, 개발 환경 자체도 많은 시스템 리소스를 소모합니다. 이로 인해 게임 파일 크기가 커질 수 있습니다.
👎로열티 정책: 게임이 100만 달러(약 13억 원) 이상의 수익을 올릴 경우 에픽게임즈에 5%의 로열티를 지불해야 합니다 (초기 학습 및 소규모 프로젝트는 무료).
👎2D 게임 개발의 상대적 비효율성: 3D 게임 개발에 최적화되어 있어, 2D 게임을 만들 때는 다른 엔진에 비해 비효율적일 수 있습니다.

🚀 
🎮 Unreal Engine으로 제작된 대표적인 게임 2~3개를 조사하고, 해당 게임에서 Unreal이 어떤 역할을 했는지 분석하세요.

파이널 판타지 VII 리메이크 (Final Fantasy VII Remake)
제작사: Square Enix
파이널 판타지 VII 리메이크는 언리얼 엔진 4를 사용하여 원작의 방대한 세계관과 캐릭터를 현대적인 고품질 그래픽으로 재탄생시켰습니다. 
언리얼 엔진의 렌더링 파이프라인과 에셋 관리 시스템을 통해 복잡한 도시 환경과 다양한 캐릭터 모델을 효율적으로 제작하고 최적화할 수 있었습니다. 
특히 화려한 전투 효과와 시네마틱 연출은 언리얼 엔진의 비주얼 이펙트 및 애니메이션 도구의 역량을 잘 보여줍니다.

포트나이트 (Fortnite)
제작사: Epic Games
포트나이트는 언리얼 엔진 4로 개발되어, 엔진의 강력한 그래픽 렌더링 능력과 최적화 기술을 사용하여 카툰풍 아트 스타일을 유지하면서도 대규모 멀티플레이어 전투를 안정적으로 구현했습니다.
특히 실시간으로 건물을 짓고 파괴하는 핵심 게임 플레이 메커니즘은 언리얼 엔진의 물리 및 충돌 시스템을 효과적으로 활용한 결과입니다. 에픽게임즈가 자체 개발한 만큼, 
엔진의 새로운 기능과 업데이트가 가장 먼저 적용되어 언리얼 엔진의 성능을 시연하는 대표적인 게임입니다. 

팰월드 (Palworld)
제작사: Pocketpair

팰월드는 언리얼 엔진 4,5를 기반으로 개발되어, 방대하고 다양한 오픈 월드 환경을 구현했습니다. 생명체인 '팰'들의 독특한 디자인과 애니메이션, 그리고 전투 중의 다양한 시각 효과들은 언리얼 엔진의 그래픽 렌더링 및 애니메이션을 사용했습니다. 
플레이어가 팰을 포획하고 기지를 건설하는 등의 상호작용은 엔진의 물리 및 충돌 시스템을 활용하여 구현되었으며, 대규모 플레이어가 함께 즐길 수 있는 멀티플레이어 기능 역시 언리얼 엔진의 네트워킹 지원을 통해 개발했습니다.

16:30~17:30
2. 게임씬(Game Scene)의 개념 탐구

게임씬이 무엇을 의미하는지 정의하고, 게임씬이 게임의 구성 요소에서 어떤 역할을 하는지 설명해주세요.
Unreal Engine에서 사용하는 주요 게임씬 구성 요소(월드, 액터, 라이트, 카메라 등)를 조사하고, 각 요소의 역할을 간략하게 설명해주세요. 

🚀 
🎮 게임 씬(Game Scene)이란?
게임 씬은 게임의 개별적인 '장면'이나 '환경'을 의미합니다. 마치 영화의 한 장소나 특정 상황처럼, 게임 플레이가 이루어지는 모든 시각적, 청각적, 상호작용적 요소들을 담는 독립적인 공간이죠. 게임의 흐름에 따라 메인 메뉴, 특정 레벨, 보스전 등으로 씬이 전환됩니다.
게임 구성 요소에서 씬의 역할: 씬은 게임의 흐름을 제어하고, 플레이어가 탐험할 환경을 제공하며, 필요한 게임 콘텐츠를 효율적으로 관리하여 개발과 플레이어 경험 모두를 최적화합니다.

🚀
🏗 Unreal Engine의 주요 게임 씬 구성 요소
언리얼 엔진에서 게임 씬을 **레벨(Level)**이라고 부릅니다.

💡월드 (World): 게임의 모든 레벨과 그 안의 요소들을 포함하는 가장 큰 상위 공간입니다. 프로젝트 내의 모든 게임 레벨이 이 월드 안에 존재합니다.
💡액터 (Actor): 게임 월드에 배치될 수 있는 모든 객체의 기본 단위입니다. 위치, 회전, 크기를 가지며, 카메라, 라이트, 캐릭터, 아이템 등 거의 모든 게임 내 존재가 액터입니다.
💡컴포넌트 (Component): 액터에 특정 기능이나 시각적 요소를 추가하는 모듈입니다. 액터 자체는 빈 그릇 같고, 컴포넌트가 실제 동작이나 외형을 부여합니다. 예를 들어, 3D 모델, 움직임, 충돌 감지 기능 등이 컴포넌트에 해당합니다.
💡라이트 (Light): 씬에 빛을 제공하여 오브젝트를 보이게 하고, 그림자를 만들며, 분위기를 조성하는 액터입니다. 태양, 횃불, 전구 등이 라이트의 예시입니다.
💡카메라 (Camera): 플레이어가 게임 월드를 보는 시점을 결정하는 액터입니다. 1인칭, 3인칭 등 다양한 시점 구현에 사용됩니다.
💡지형 (Landscape / Terrain): 방대한 야외 환경(산, 언덕, 계곡)을 만들고 편집하는 특수한 시스템입니다.
💡스태틱 메시 (Static Mesh): 움직이지 않거나 고정된 3D 모델(액터)입니다. 건물, 바위, 가구 등 환경을 구성하는 고정된 오브젝트에 사용됩니다.
💡스켈레탈 메시 (Skeletal Mesh): 뼈대(스켈레톤)를 가지고 있어 애니메이션이 가능한 3D 모델(액터)입니다. 캐릭터, 몬스터 등 움직이는 오브젝트에 사용됩니다.


오늘 하루 요약:
📅 오늘 하루 일정 요약
14:00 ~ 16:00: 개인 설정 및 언리얼 엔진 조사 시작.
언리얼 엔진의 정의, 역사, 특징(C++ 기반, 높은 휴대성, 다양한 플랫폼 지원) 및 활용 분야(게임 외 영화, 건축 등)를 학습.
언리얼 엔진의 주요 기능(그래픽 렌더링, 물리 엔진, 사운드 엔진, 애니메이션 시스템, AI, 스크립팅/프로그래밍, 레벨 편집기, 네트워킹)을 파악.
언리얼 엔진의 장점(최고 그래픽 품질, 강력한 기능, 블루프린트, 오픈 소스)과 단점(높은 학습 곡선, 높은 리소스 요구량, 로열티, 2D 비효율성)을 분석.
언리얼 엔진으로 제작된 대표 게임(파이널 판타지 VII 리메이크, 포트나이트, 팰월드)에서 언리얼 엔진이 어떤 역할을 했는지 분석.

16:30 ~ 17:30: 게임 씬 개념 탐구.
게임 씬의 정의와 게임 구성 요소에서의 역할(게임 흐름 제어, 환경 제공, 콘텐츠 관리, 경험 분리, 개발 효율성)을 이해.
언리얼 엔진의 주요 게임 씬 구성 요소(월드, 액터, 컴포넌트, 라이트, 카메라, 지형, 스태틱 메시, 스켈레탈 메시)와 각 요소의 역할을 정리.
